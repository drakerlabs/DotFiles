" Must be set first - Makes Vim behave in a way not compatible with Vi.
" Needed for most modern plugins
set nocompatible

" auto load all plugins in .vim/bundle/
source ~/.vim/bundle/pathogen/autoload/pathogen.vim
call pathogen#infect()

" Buffers do not have to be saved before they can be hidden. Might be confusing for some.
set hidden

"always set terminal title
set title

" guioptions e = show tabs, m = show menu
set guioptions=e

" Always show status line
set laststatus=2

syntax enable

"Show 80 line mark
set cc=80

" Vim Clojure settings
let vimclojure#HighlightBuiltins=1
let vimclojure#HighlightContrib=1
let vimclojure#DynamicHighlighting=1
let vimclojure#FuzzyIndent=1
let vimclojure#WantNailgun=0
let vimclojure#ParenRainbow=1

" Remember last 1000 commands
set history=1000

" Show line numbers
set number
set ruler

" Searches are case insensitive unless you use a capital letter. /str/i forces case sensitivity
set ignorecase
set smartcase

" Turn on spell checking
set spell

" Tabs set to always be two spaces
set tabstop=2
set shiftwidth=2
set expandtab
set softtabstop=2
set autoindent

" Use wildmenu!
set wildmenu
set wildmode=list:longest,full

" Show trailing whitespace
set list listchars=tab:\ \ ,trail:Â·

" Better auto indenting
filetype off
filetype plugin indent on

set wildignore+=tmp/*,logs/*,.git,coverage/*,.log,*.class,*.pom,*.jar,.gitkeep

" store backups in central location
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp

" Automatically highlight scss as css.
autocmd BufNewFile,BufRead *.scss set filetype=css

" highlight thor as ruby
autocmd BufNewFile,BufRead *.thor set filetype=ruby

" Map jj to escape
imap jj <Esc>

" Change the leader to ,
let mapleader=","
let maplocalleader=","

" Map ; to :
nnoremap ; :

" Easy window nav
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" Easy tab nav
map <C-n> :tabnext<CR>
map <C-p> :tabprev<CR>

" up and down by visual line, not line number
nnoremap j gj
nnoremap k gk

" Quickly edit/reload the .vimrc
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>

noremap <leader>n :NERDTreeToggle<CR>
let g:ctrlp_map = '<leader>t'

" Change ruby 1.8 hash syntax to 1.9, with confirmation
map <leader>h :%s/:\(\w*\)\(\s*\)=>\(\s*\)/\1:\3/gc<CR>

" Change ruby 1.8 hash syntax to 1.9, without confirmation
map <leader>H :%s/:\(\w*\)\(\s*\)=>\(\s*\)/\1:\3/g<CR>

" Remove trailing whitespace
map <leader>w :%s/\s\+$//g<CR>

" Replace tabs with two spaces
map <leader>W :retab<CR>

" Align cucumber tables.
inoremap <silent> <Bar>   <Bar><Esc>:call <SID>align()<CR>a

function! s:align()
  let p = '^\s*|\s.*\s|\s*$'
  if exists(':Tabularize') && getline('.') =~# '^\s*|' && (getline(line('.')-1) =~# p || getline(line('.')+1) =~# p)
    let column = strlen(substitute(getline('.')[0:col('.')],'[^|]','','g'))
    let position = strlen(matchstr(getline('.')[0:col('.')],'.*|\s*\zs.*'))
    Tabularize/|/l1
    normal! 0
    call search(repeat('[^|]*|',column).'\s\{-\}'.repeat('.',position),'ce',line('.'))
  endif
endfunction
